{"version":3,"sources":["lib/ui/View.js","components/NoteFlake3.js","components/MidiTracks.js","App.js","index.js"],"names":["View","props","margin","top","right","bottom","left","rowSpan","columnSpan","canResizeRows","canResizeColumns","onResize","increaseRows","state","rowlimit","outerHeight","viewSize","newSpan","viewHeight","setState","height","decreaseRows","increaseColumns","columnLimit","outerWidth","viewWidth","width","decreaseColumns","close","toggleView","name","getSizeControlHTML","className","onClick","title","disabled","icon","faArrowsAltV","faLongArrowAltUp","faArrowsAltH","faLongArrowAltLeft","faTimesCircle","additionalState","this","ow","oh","PureComponent","NoteFlake","componentDidMount","initialize","Canvas","setupCanvas","canvas","initialized","draw","notes","console","log","maxTime","max","n","end","pitchExt","extent","pitch","wholeSize","Math","radius","min","noteScale","scaleLinear","domain","range","pitchScale","ctx","getContext","clearRect","fillStyle","cx","cy","i","length","note","x","start","y","rotated","getRotatedPositions","r","drawFilledCircle","resizeComponent","px","py","points","startAngle","dx","dy","atan","hypot","angle","PI","cos","sin","push","y2","ref","style","MidiTracks","tracks","flatMap","t","map","pitchRange","schemeCategory10","getRotatedPosition","index","rayCount","App","floor","window","innerWidth","innerHeight","midiFileData","addEventListener","source","document","getElementById","MidiParser","parse","obj","parts","preprocessMidiFileData","d","noteObjs","e","alert","s","type","id","accept","href","target","faGithub","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a6fa4310.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowsAltH, faArrowsAltV, faLongArrowAltLeft, faLongArrowAltUp, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class View extends PureComponent {\r\n\r\n    /**\r\n     * @param {Props} props props\r\n     * @param {Obbject} margin margin\r\n     * @param {number} rowSpan number of rows this view initially has\r\n     * @param {number} colSpan number of columns this view initially has\r\n     * @param {boolean} canResizeRows allow to resize rows?\r\n     * @param {boolean} canResizeColumns allow to resize columns?\r\n     */\r\n    constructor(\r\n        props,\r\n        margin = { top: 0, right: 0, bottom: 0, left: 0 },\r\n        rowSpan = 1,\r\n        columnSpan = 1,\r\n        canResizeRows = true,\r\n        canResizeColumns = true,\r\n    ) {\r\n        super(props);\r\n        const { outerWidth, outerHeight } = props.viewSize;\r\n        const viewWidth = outerWidth * columnSpan;\r\n        const viewHeight = outerHeight * rowSpan;\r\n        this.state = {\r\n            rowSpan,\r\n            columnSpan,\r\n            canResizeRows,\r\n            canResizeColumns,\r\n            rowlimit: 12,\r\n            columnLimit: 2,\r\n            outerWidth,\r\n            outerHeight,\r\n            viewHeight,\r\n            viewWidth,\r\n            margin,\r\n            width: (outerWidth * columnSpan) - margin.left - margin.right,\r\n            height: (outerHeight * rowSpan) - margin.top - margin.bottom,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Views shoud overwrite this method,\r\n     * to react to resizing.\r\n     * This method is called by resizeComponent (see below).\r\n     */\r\n    onResize = () => { }\r\n\r\n    /**\r\n     * Resizes the component by updating the width and height depending on\r\n     * the received outerWidth and outerHeight props and the internal margin.\r\n     * After updating the state, the callback function will be called.\r\n     * @param {Object} component\r\n     * @param {Function} callback\r\n     * @param {Object} additionalState other properties to set in the state\r\n     */\r\n    resizeComponent(additionalState = {}) {\r\n        const { outerWidth, outerHeight } = this.props.viewSize;\r\n        const { outerWidth: ow, outerHeight: oh, margin, rowSpan, columnSpan } = this.state;\r\n        if (ow !== outerWidth || oh !== outerHeight) {\r\n            const viewWidth = outerWidth * columnSpan;\r\n            const viewHeight = outerHeight * rowSpan;\r\n            this.setState(\r\n                {\r\n                    ...additionalState,\r\n                    outerWidth,\r\n                    outerHeight,\r\n                    viewWidth,\r\n                    viewHeight,\r\n                    width: (outerWidth * columnSpan) - margin.left - margin.right,\r\n                    height: (outerHeight * rowSpan) - margin.top - margin.bottom,\r\n                },\r\n                this.onResize\r\n            );\r\n        }\r\n    }\r\n\r\n    increaseRows = () => {\r\n        const { rowSpan, rowlimit, margin, canResizeRows } = this.state;\r\n        const { outerHeight } = this.props.viewSize;\r\n        if (!canResizeRows) { return; }\r\n        if (rowSpan >= rowlimit) { return; }\r\n        const newSpan = rowSpan + 1;\r\n        const viewHeight = outerHeight * newSpan;\r\n        this.setState(\r\n            {\r\n                rowSpan: newSpan,\r\n                viewHeight,\r\n                height: viewHeight - margin.top - margin.bottom\r\n            },\r\n            this.onResize\r\n        );\r\n    }\r\n\r\n    decreaseRows = () => {\r\n        const { rowSpan, margin, canResizeRows } = this.state;\r\n        const { outerHeight } = this.props.viewSize;\r\n        if (!canResizeRows) { return; }\r\n        if (rowSpan <= 1) { return; }\r\n        const newSpan = rowSpan - 1;\r\n        const viewHeight = outerHeight * newSpan;\r\n        this.setState(\r\n            {\r\n                rowSpan: newSpan,\r\n                viewHeight,\r\n                height: viewHeight - margin.top - margin.bottom\r\n            },\r\n            this.onResize\r\n        );\r\n    }\r\n\r\n    increaseColumns = () => {\r\n        const { columnSpan, columnLimit, margin, canResizeColumns } = this.state;\r\n        const { outerWidth } = this.props.viewSize;\r\n        if (!canResizeColumns) { return; }\r\n        if (columnSpan >= columnLimit) { return; }\r\n        const newSpan = columnSpan + 1;\r\n        const viewWidth = outerWidth * newSpan;\r\n        this.setState(\r\n            {\r\n                columnSpan: newSpan,\r\n                viewWidth,\r\n                width: viewWidth - margin.left - margin.right\r\n            },\r\n            this.onResize\r\n        );\r\n    }\r\n\r\n    decreaseColumns = () => {\r\n        const { columnSpan, margin, canResizeColumns } = this.state;\r\n        const { outerWidth } = this.props.viewSize;\r\n        if (!canResizeColumns) { return; }\r\n        if (columnSpan <= 1) { return; }\r\n        const newSpan = columnSpan - 1;\r\n        const viewWidth = outerWidth * newSpan;\r\n        this.setState(\r\n            {\r\n                columnSpan: newSpan,\r\n                viewWidth,\r\n                width: viewWidth - margin.left - margin.right\r\n            },\r\n            this.onResize\r\n        );\r\n    }\r\n\r\n    close = () => {\r\n        const { toggleView, name } = this.props;\r\n        if (toggleView && name) {\r\n            toggleView(name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the HTML (JSX) for the view size control buttons\r\n     */\r\n    getSizeControlHTML = () => (\r\n        <div className='sizeControl'>\r\n            {this.state.canResizeRows && (\r\n                <span>\r\n                    <button\r\n                        onClick={this.increaseRows\r\n                        }\r\n                        title={'Increase rows'}\r\n                        disabled={this.state.rowSpan >= this.state.rowlimit}\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowsAltV} />\r\n                    </button >\r\n                    <button\r\n                        onClick={this.decreaseRows}\r\n                        title={'Decrease rows'}\r\n                        disabled={this.state.rowSpan <= 1}\r\n                    >\r\n                        <FontAwesomeIcon icon={faLongArrowAltUp} />\r\n                    </button>\r\n                </span>\r\n            )}\r\n            {this.state.canResizeColumns && (\r\n                <span>\r\n                    <button\r\n                        onClick={this.increaseColumns}\r\n                        title={'Increase columns'}\r\n                        disabled={this.state.columnSpan >= this.state.columnLimit}\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowsAltH} />\r\n                    </button>\r\n                    <button\r\n                        onClick={this.decreaseColumns}\r\n                        title={'Decrease columns'}\r\n                        disabled={this.state.columnSpan <= 1}\r\n                    >\r\n                        <FontAwesomeIcon icon={faLongArrowAltLeft} />\r\n                    </button>\r\n                </span>\r\n            )}\r\n            <button\r\n                onClick={this.close}\r\n                title={'Close'}\r\n            >\r\n                <FontAwesomeIcon icon={faTimesCircle} />\r\n            </button>\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { scaleLinear, max, extent } from 'd3';\r\nimport View from '../lib/ui/View';\r\nimport { Canvas } from 'musicvis-lib';\r\n\r\n\r\nexport default class NoteFlake extends View {\r\n\r\n    componentDidMount = () => this.initialize();\r\n\r\n    onResize = () => {\r\n        this.initialize();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.resizeComponent();\r\n        this.draw();\r\n    }\r\n\r\n    initialize = () => {\r\n        // Setup canvas rescaled to device pixel ratio\r\n        Canvas.setupCanvas(this.canvas);\r\n        this.setState(\r\n            { initialized: true }\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Main draw function, sets scale domains and controls drawing of each\r\n     * component\r\n     */\r\n    draw = () => {\r\n        const { viewWidth, viewHeight } = this.state;\r\n        const { notes } = this.props;\r\n        console.log(notes);\r\n\r\n        const maxTime = max(notes, n => n.end);\r\n        const pitchExt = extent(notes, n => n.pitch);\r\n\r\n        const wholeSize = 0.3 * Math.max(viewWidth, viewHeight);\r\n        const radius = Math.min(wholeSize / maxTime / 2, 5);\r\n\r\n\r\n        const noteScale = scaleLinear()\r\n            .domain([0, maxTime])\r\n            .range([12 * radius, wholeSize]);\r\n        const pitchScale = scaleLinear()\r\n            .domain(pitchExt)\r\n            .range([radius, radius * (pitchExt[1] - pitchExt[0])]);\r\n\r\n        // Draw foreground (changes all the time)\r\n        const ctx = this.canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, viewWidth, viewHeight);\r\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.3)';\r\n\r\n        const cx = viewWidth / 2;\r\n        const cy = viewHeight / 2;\r\n\r\n        for (let i = 0; i < notes.length; i++) {\r\n            const note = notes[i];\r\n            const x = cx + noteScale(note.start);\r\n            const y = cy + pitchScale(note.pitch);\r\n            const rotated = this.getRotatedPositions(x, y, cx, cy);\r\n            for (const r of rotated) {\r\n                Canvas.drawFilledCircle(ctx, r.x, r.y, radius);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * For a point px, py at angle 0, returns all other points at rotated positions.\r\n     *\r\n     *                                (px, py)\r\n     *                                   |\r\n     *    (cx, xy) -----------------------\r\n     *\r\n     * @param {*} px\r\n     * @param {*} py\r\n     * @param {*} cx\r\n     * @param {*} cy\r\n     */\r\n    getRotatedPositions(px, py, cx, cy) {\r\n        const points = [];\r\n        // Start angle between hypotenuse and horizontal\r\n        let startAngle = 0;\r\n        if (py !== cy) {\r\n            const dx = px - cx;\r\n            const dy = py - cy;\r\n            startAngle = Math.atan(dy / dx);\r\n        }\r\n        // Radius\r\n        const r = Math.hypot((px - cx), (py - cy));\r\n        // Get positions\r\n        for (let i = 0; i < 6; i++) {\r\n            const angle = (60 * i) / 180 * Math.PI + startAngle;\r\n            const x = cx + Math.cos(angle) * r;\r\n            const y = cy + Math.sin(angle) * r;\r\n            points.push({ x, y });\r\n            // Mirror if startangle !== 0\r\n            if (startAngle !== 0) {\r\n                const y2 = cy - Math.sin(angle) * r;\r\n                points.push({ x, y: y2 });\r\n            }\r\n        }\r\n        return points;\r\n    }\r\n\r\n    render() {\r\n        const { viewWidth, viewHeight } = this.state;\r\n        // Only draw data after chart has been initialized\r\n        if (this.canvas) {\r\n            this.draw();\r\n        }\r\n        // HTML\r\n        return (\r\n            <div className='NoteFlake'>\r\n                <canvas\r\n                    className='ViewCanvas'\r\n                    ref={n => this.canvas = n}\r\n                    style={{ width: viewWidth, height: viewHeight }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { schemeCategory10, scaleLinear, max, extent } from 'd3';\r\nimport View from '../lib/ui/View';\r\nimport { Canvas } from 'musicvis-lib';\r\n\r\n\r\nexport default class MidiTracks extends View {\r\n\r\n    componentDidMount = () => this.initialize();\r\n\r\n    onResize = () => {\r\n        this.initialize();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.resizeComponent();\r\n        this.draw();\r\n    }\r\n\r\n    initialize = () => {\r\n        // Setup canvas rescaled to device pixel ratio\r\n        Canvas.setupCanvas(this.canvas);\r\n        this.setState(\r\n            { initialized: true }\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Main draw function, sets scale domains and controls drawing of each\r\n     * component\r\n     */\r\n    draw = () => {\r\n        const { viewWidth, viewHeight, } = this.state;\r\n        const { tracks } = this.props;\r\n\r\n        const maxTime = max(tracks, notes => max(notes, n => n.end));\r\n        const pitchExt = extent(tracks.flatMap(t => t.map(n => n.pitch)));\r\n\r\n        const wholeSize = 0.35 * Math.max(viewWidth, viewHeight);\r\n        const radius = Math.min(wholeSize / maxTime / 2, 5);\r\n\r\n        const noteScale = scaleLinear()\r\n            .domain([0, maxTime])\r\n            .range([wholeSize / 10, wholeSize]);\r\n        const pitchRange = radius * (pitchExt[1] - pitchExt[0]) / 2;\r\n        const pitchScale = scaleLinear()\r\n            .domain(pitchExt)\r\n            .range([-pitchRange, pitchRange]);\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, viewWidth, viewHeight);\r\n\r\n        const cx = viewWidth / 2;\r\n        const cy = viewHeight / 2;\r\n\r\n        for (let i = 0; i < tracks.length; i++) {\r\n            ctx.fillStyle = schemeCategory10[i % 10];\r\n            for (let note of tracks[i]) {\r\n                const x = cx + noteScale(note.start);\r\n                const y = cy - pitchScale(note.pitch);\r\n                const r = this.getRotatedPosition(x, y, cx, cy, i, tracks.length);\r\n                Canvas.drawFilledCircle(ctx, r.x, r.y, radius);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * For a point px, py at angle 0, returns all other points at rotated positions.\r\n     *\r\n     *                                (px, py)\r\n     *                                   |\r\n     *    (cx, xy) -----------------------\r\n     *\r\n     * @param {*} px\r\n     * @param {*} py\r\n     * @param {*} cx\r\n     * @param {*} cy\r\n     */\r\n    getRotatedPosition(px, py, cx, cy, index, rayCount) {\r\n        // Start angle between hypotenuse and horizontal\r\n        let startAngle = 0;\r\n        if (py !== cy) {\r\n            const dx = px - cx;\r\n            const dy = py - cy;\r\n            startAngle = Math.atan(dy / dx);\r\n        }\r\n        // Radius\r\n        const r = Math.hypot((px - cx), (py - cy));\r\n        // Get position\r\n        const rotationAngle = 360 / rayCount;\r\n        const angle = (rotationAngle * index) / 180 * Math.PI + startAngle;\r\n        const x = cx + Math.cos(angle) * r;\r\n        const y = cy + Math.sin(angle) * r;\r\n        return { x, y };\r\n    }\r\n\r\n    render() {\r\n        const { viewWidth, viewHeight } = this.state;\r\n        // Only draw data after chart has been initialized\r\n        if (this.canvas) {\r\n            this.draw();\r\n        }\r\n        // HTML\r\n        return (\r\n            <div className='NoteFlake'>\r\n                <canvas\r\n                    className='ViewCanvas'\r\n                    ref={n => this.canvas = n}\r\n                    style={{ width: viewWidth, height: viewHeight }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React, { Component } from 'react';\nimport './style/App.css';\nimport NoteFlake from './components/NoteFlake3';\nimport MidiTracks from './components/MidiTracks';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport MidiParser from 'midi-parser-js';\nimport { preprocessMidiFileData } from 'musicvis-lib';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewSize: {\n        outerWidth: 800,\n        outerHeight: 600\n      },\n      midiFileData: [],\n      notes: [],\n    };\n  }\n\n  componentDidMount() {\n    // Scale layout to current screen size\n    window.addEventListener('resize', this.onResize, false);\n    this.onResize();\n\n    const source = document.getElementById('filereader');\n    MidiParser.parse(source, (obj) => {\n      try {\n        const parsed = preprocessMidiFileData(obj);\n        const parts = parsed.parts.map(d => d.noteObjs);\n        this.setState({\n          midiFileData: parts,\n          notes: parts[0]\n        });\n      } catch (e) {\n        alert('Invalid MIDI file or wrong format!');\n      }\n    });\n  }\n\n  /**\n   * Updates the size state when the window size changes\n   * so views can react and redraw\n   */\n  onResize = () => {\n    this.setState({\n      viewSize: {\n        outerWidth: Math.floor(window.innerWidth - 20),\n        outerHeight: Math.floor(window.innerHeight - 200)\n      }\n    });\n  };\n\n  render() {\n    const s = this.state;\n    return (\n      <div className={`App dark`} >\n        <div>\n          <label>\n            Open a MIDI file\n            <input\n              className='fileInput'\n              type='file'\n              id='filereader'\n              accept='.midi,.mid'\n            />\n          </label>\n        </div>\n        <MidiTracks\n          viewSize={s.viewSize}\n          tracks={s.midiFileData}\n        />\n        <NoteFlake\n          viewSize={s.viewSize}\n          notes={s.notes}\n        />\n        <div className='githubLink'>\n          <a\n            href='https://github.com/fheyen/visual-music-art'\n            target='blank'\n          >\n            <FontAwesomeIcon icon={faGithub} />&nbsp;\n              https://github.com/fheyen/visual-music-art\n          </a>\n        </div>\n      </div >\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}